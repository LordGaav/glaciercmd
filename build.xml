<?xml version="1.0"?>
<!--

 Copyright (c) 2012 Nick Douma < n.douma [at] nekoconeko . nl >

 This file is part of glaciercmd.

 glaciercmd is free software: you can redistribute it and/or modify
 it under the terms of the GNU General Public License as published by
 the Free Software Foundation, either version 3 of the License, or
 (at your option) any later version.

 glaciercmd is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 GNU General Public License for more details.

 You should have received a copy of the GNU General Public License
 along with glaciercmd. If not, see <http://www.gnu.org/licenses/>.

-->
<project name="glaciercmd" basedir="." default="dist"> 

	<!-- Set up properties containing important project directories --> 
	<property name="source.root" value="src"/>
	<property name="class.root" value="classes"/>
	<property name="dist.dir" value="dist"/>
	<property name="libs.dir" value="lib"/>
	<property name="docs.dir" value="doc"/>
	<property name="root.package" value="nl.nekoconeko.glaciercmd"/>
	<property name="entry.point" value="Entry"/>
	<property name="executable" value="glaciercmd"/>

	<available file=".git" type="dir" property="git.present"/>

	<path id="libraries">
		<pathelement location="${class.root}"/> 
		<fileset dir="${libs.dir}">
			<include name="**/*.jar"/>
		</fileset>
	</path>

	<path id="dist_libraries">
		<pathelement location="${executable}.jar"/>
		<fileset dir="${libs.dir}">
			<include name="**/*.jar"/>
			<exclude name="**/*-javadoc.jar"/>
			<exclude name="**/*-sources.jar"/>
		</fileset>
	</path>
	
	<pathconvert property="project.class.path" pathsep=":">
		<path refid="libraries"/>
		<map from="${basedir}" to="."/>
	</pathconvert>

	<pathconvert property="jar.class.path" pathsep=" ">
		<path refid="dist_libraries"/>
		<map from="${basedir}" to="."/>
	</pathconvert>

	<target name="print-classpath" description="Show the dependency class path">
		<property name="relpath" value="${project.class.path}" relative="yes" basedir="${basedir}"/>
		<echo>${relpath}</echo>
	</target>

	<!-- Create our runtime subdirectories and copy resources into them -->
	<target name="prepare" depends="git-revision" description="Sets up build structures">
		<delete dir="${class.root}"/>
		<mkdir dir="${class.root}"/>
		
		<!-- Copy our property files and O/R mappings for use at runtime -->
		<copy todir="${class.root}" >
			<fileset dir="${source.root}" >
				<include name="**/*.properties"/>
			</fileset>
		</copy>
	</target>

	<!-- Compile the java source of the project -->
	<target name="compile" depends="prepare" description="Compiles all Java classes">
		<javac srcdir="${source.root}"
		       destdir="${class.root}"
		       debug="on"
		       optimize="off"
		       deprecation="on"
		       includeantruntime="false"
			   classpath="${project.class.path}"
		/>
		<mkdir dir="${class.root}/META-INF" />
		<copy file="LICENSE" tofile="${class.root}/META-INF/LICENSE" />
	</target>
	
	<!-- Create an easy to use bash file -->
	<target name="executable" depends="compile" description="Create an easy to use bash file">
		<echo file="${executable}" append="false">#!/bin/sh
java -classpath ${project.class.path} ${root.package}.${entry.point} "$$@"</echo>
		<echo file="${executable}-debug" append="false">#!/bin/sh
java -Xdebug -Xrunjdwp:transport=dt_socket,address=8998,server=y -classpath ${project.class.path} ${root.package}.${entry.point} "$$@"</echo>
		<chmod file="${executable}" perm="a+x"/>
		<chmod file="${executable}-debug" perm="a+x"/>
	</target>

	<target name="git-revision" description="Store git revision in ${version}" if="git.present">
		<exec executable="git" outputproperty="version" failifexecutionfails="false" errorproperty="">
			<arg value="describe"/>
			<arg value="--tags"/>
			<arg value="--always"/>
			<arg value="HEAD"/>
		</exec>
		<condition property="version" value="${version}" else="unknown">
			<and>
				<isset property="version"/>
				<length string="${version}" trim="yes" length="0" when="greater"/>
			</and>
		</condition>
		<echo>${executable} BUILD_VERSION is ${version}</echo>
	</target>
	
	<!-- Create a clean dist directory -->
	<target name="dist" depends="executable,man-page,readme" description="Create a clean dist directory">
		<delete dir="${dist.dir}"/>
		<mkdir dir="${dist.dir}"/>
		<mkdir dir="${dist.dir}/${docs.dir}"/>
		<mkdir dir="${dist.dir}/${libs.dir}"/>

		<copy file="${docs.dir}/configuration.example" tofile="${dist.dir}/${executable}.config.example"/>

		<copy todir="${dist.dir}/${libs.dir}">
			<fileset dir="${libs.dir}">
				<include name="**/*.jar"/>
				<exclude name="**/*-javadoc.jar"/>
				<exclude name="**/*-sources.jar"/>
			</fileset>
		</copy>

		<copy file="${docs.dir}/${executable}.1" tofile="${dist.dir}/${docs.dir}/${executable}.1" />
		<copy file="README.md" tofile="${dist.dir}/README.md" />
		<copy file="LICENSE" tofile="${dist.dir}/LICENSE" />

		<jar destfile="${dist.dir}/${executable}.jar" basedir="${class.root}">
			<manifest>
				<attribute name="Implementation-Vendor" value="Nekoconeko.nl"/>
				<attribute name="Implementation-Title" value="${executable}"/>
				<attribute name="Implementation-Version" value="${version}"/>
				<attribute name="Built-By" value="${user.name}"/>
				<attribute name="License" value="GPLv3"/>
				<attribute name="Sealed" value="true"/>
				<attribute name="Class-Path" value="${jar.class.path}"/>
				<attribute name="Main-Class" value="${root.package}.${entry.point}"/>
			</manifest>
		</jar>

		<echo file="${dist.dir}/${executable}" append="false">#!/bin/sh
java -jar ${executable}.jar ${root.package}.${entry.point} "$$@"</echo>
		
		<chmod file="${dist.dir}/${executable}" perm="a+x"/>
	</target>

	<target name="bump-version" depends="git-revision" description="Bump the BUILD_VERSION version number">
		<replaceregexp file="${source.root}/nl/nekoconeko/glaciercmd/Version.java">
			<regexp pattern="BUILD_VERSION = &quot;.*&quot;;"/>
			<substitution expression="BUILD_VERSION = &quot;${version}&quot;;"/>
		</replaceregexp>
	</target>

	<target name="man-page" depends="compile" description="Generate man page">
		<java classpath="${project.class.path}" classname="nl.nekoconeko.glaciercmd.docs.ManPage" output="${docs.dir}/${executable}.1" />
	</target>

	<target name="readme" depends="compile" description="Generate README">
		<java classpath="${project.class.path}" classname="nl.nekoconeko.glaciercmd.docs.Readme" output="README.md" />
	</target>

	<target name="package-tar" depends="dist" description="Create tarball from dist">
		<move file="${dist.dir}" tofile="${executable}-${version}" />
		<tar destfile="${executable}-${version}.tar.bz2" compression="bzip2">
			<tarfileset dir="." preserveleadingslashes="false" mode="755">
				<include name="${executable}-${version}/${executable}" />
			</tarfileset>
			<tarfileset dir="." preserveleadingslashes="false">
				<include name="${executable}-${version}/**" />
				<exclude name="${executable}-${version}/${executable}" />
			</tarfileset>
		</tar>
		<move tofile="${dist.dir}" file="${executable}-${version}" />
	</target>
</project>
